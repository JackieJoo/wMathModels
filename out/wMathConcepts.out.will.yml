format: willfile-1.0.0
about:
  name: wMathConcepts
  description: >-
    Collection of functions to operate such geometrical concepts as Sphere, Box,
    Plane, Frustum, Ray, Axis and Angle, Euler's Angles, Quaternion and other.
    Why MathConcepts? Three reasons. All functions of the module are purely
    functional. MathConcepts heavily relies on another great concept MathVector
    what makes the module less sensible to data formats of operational objects.
    The module provides functions for conversions from one to another conceptual
    form, for example from Quaternion to Euler's Angles or from Euler's Angles
    to Quaternion or between different representations of Euler's Angles. Unlike
    MatchConcepts many alternatives do conversions inconsistently or
    inaccurately. MatchConcepts is densely covered by tests and optimized for
    accuracy. Use MatchConcepts to have uniform experience solving geometrical
    problems and to get a more flexible program.
  enabled: 1
  version: 0.4.26
  interpreters: &ref_0
    - nodejs >= 6.0.0
    - chrome >= 60.0.0
    - firefox >= 60.0.0
  keywords: &ref_1
    - wTools
path:
  module.willfiles:
    criterion:
      predefined: 1
    path: wMathConcepts.out.will.yml
  module.common:
    criterion:
      predefined: 1
    path: wMathConcepts.out
  module.original.willfiles:
    criterion:
      predefined: 1
    path:
      - ../.im.will.yml
      - ../.ex.will.yml
  local:
    criterion:
      predefined: 1
  remote:
    criterion:
      predefined: 1
  in:
    criterion:
      predefined: 0
    path: .
  temp:
    path: .
  out:
    criterion:
      predefined: 0
    path: .
  out.debug:
    criterion:
      debug: 1
    path: debug
  out.release:
    criterion:
      debug: 0
    path: release
  proto:
    path: ../proto
  repository:
    path: 'git+https:///github.com/Wandalen/wMathConcepts.git'
  bugs:
    path: 'https:///github.com/Wandalen/wMathConcepts/issues'
  exported.dir.proto.export:
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
    path: ../proto
  exported.files.proto.export:
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
    path:
      - ../proto
      - ../proto/dwtools
      - ../proto/dwtools/Tools.s
      - ../proto/dwtools/abase
      - ../proto/dwtools/amath
      - ../proto/dwtools/amath/l7.test
      - ../proto/dwtools/amath/l7.test/AxisAndAngle.test.s
      - ../proto/dwtools/amath/l7.test/Box.test.s
      - ../proto/dwtools/amath/l7.test/Capsule.test.s
      - ../proto/dwtools/amath/l7.test/Euler.test.s
      - ../proto/dwtools/amath/l7.test/Experiment.experiment.s
      - ../proto/dwtools/amath/l7.test/Frustum.test.s
      - ../proto/dwtools/amath/l7.test/Line.test.s
      - ../proto/dwtools/amath/l7.test/Plane.test.s
      - ../proto/dwtools/amath/l7.test/Quat.test.s
      - ../proto/dwtools/amath/l7.test/Ray.test.s
      - ../proto/dwtools/amath/l7.test/Segment.test.s
      - ../proto/dwtools/amath/l7.test/Sphere.test.s
      - ../proto/dwtools/amath/l7_concept
      - ../proto/dwtools/amath/l7_concept/AxisAndAngle.s
      - ../proto/dwtools/amath/l7_concept/Box.s
      - ../proto/dwtools/amath/l7_concept/Capsule.s
      - ../proto/dwtools/amath/l7_concept/Euler.s
      - ../proto/dwtools/amath/l7_concept/Frustum.s
      - ../proto/dwtools/amath/l7_concept/Line.s
      - ../proto/dwtools/amath/l7_concept/Plane.s
      - ../proto/dwtools/amath/l7_concept/Quat.s
      - ../proto/dwtools/amath/l7_concept/Ray.s
      - ../proto/dwtools/amath/l7_concept/Segment.s
      - ../proto/dwtools/amath/l7_concept/Sphere.s
      - ../proto/dwtools/amath/l8
      - ../proto/dwtools/amath/l8/Concepts.s
      - ../proto/dwtools/amid
      - ../proto/dwtools/atop
submodule: {}
reflector:
  reflect.proto.:
    src:
      filePath:
        'path::proto': 'path::out.*=1'
    mandatory: 1
    criterion:
      debug: 0
    inherit:
      - predefined.*
  reflect.proto.debug:
    src:
      filePath:
        'path::proto': 'path::out.*=1'
    mandatory: 1
    criterion:
      debug: 1
    inherit:
      - predefined.*
  reflect.submodules:
    src:
      filePath:
        'submodule::*/exported::*=1/path::exportedDir*=1': 'path::out.*=1'
    mandatory: 1
    criterion:
      debug: 1
    inherit:
      - predefined.*
  exported.proto.export:
    src:
      filePath:
        .: ''
      prefixPath: ../proto
    mandatory: 1
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
  exported.files.proto.export:
    src:
      filePath:
        'path::exported.files.proto.export': ''
      basePath: .
      prefixPath: 'path::exported.dir.proto.export'
    recursive: 0
    mandatory: 1
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
step:
  clean.out.:
    opts:
      filePath: 'path::out.debug'
    criterion:
      debug: 0
    inherit:
      - files.delete
  clean.out.debug:
    opts:
      filePath: 'path::out.debug'
    criterion:
      debug: 1
    inherit:
      - files.delete
  reflect.proto.:
    opts:
      reflector: 'reflector::reflect.proto.*=1'
    criterion:
      debug: 0
      raw: 0
    inherit:
      - files.reflect
  reflect.proto.debug:
    opts:
      reflector: 'reflector::reflect.proto.*=1'
    criterion:
      debug: 1
      raw: 0
    inherit:
      - files.reflect
  reflect.proto.raw:
    opts:
      reflector: 'reflector::reflect.proto.*=1'
    criterion:
      debug: 0
      raw: 1
    inherit:
      - files.reflect
  reflect.proto.debug.raw:
    opts:
      reflector: 'reflector::reflect.proto.*=1'
    criterion:
      debug: 1
      raw: 1
    inherit:
      - files.reflect
  reflect.submodules.:
    opts:
      reflector: 'reflector::reflect.submodules*=1'
    criterion:
      debug: 1
      raw: 0
    inherit:
      - files.reflect
  reflect.submodules.raw:
    opts:
      reflector: 'reflector::reflect.submodules*=1'
    criterion:
      debug: 1
      raw: 1
    inherit:
      - files.reflect
  reflect.submodules:
    opts:
      reflector: 'reflector::reflect.submodules*'
    criterion:
      debug: 1
    inherit:
      - files.reflect
  export.proto:
    opts:
      export: 'path::proto'
      tar: 0
    criterion:
      debug: 1
      proto: 1
    inherit:
      - module.export
build:
  debug.raw:
    steps:
      - 'step::clean.out*=1'
      - 'step::reflect.proto.*=1'
    criterion:
      default: 1
      debug: 1
      raw: 1
  debug.compiled:
    steps:
      - 'step::clean.out*=1'
      - 'step::reflect.proto.*=1'
    criterion:
      debug: 1
      raw: 0
  release.raw:
    steps:
      - 'step::clean.out*=1'
      - 'step::reflect.proto.*=1'
    criterion:
      debug: 0
      raw: 1
  release.compiled:
    steps:
      - 'step::clean.out*=1'
      - 'step::reflect.proto.*=1'
    criterion:
      debug: 0
      raw: 0
  all:
    steps:
      - 'build::debug.raw'
      - 'build::release.compiled'
  proto.export:
    steps:
      - 'build::debug.raw'
      - 'step::export.proto'
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
exported:
  proto.export:
    version: 0.4.26
    exportedReflector: 'reflector::exported.proto.export'
    exportedFilesReflector: 'reflector::exported.files.proto.export'
    exportedDirPath: 'path::exported.dir.proto.export'
    exportedFilesPath: 'path::exported.files.proto.export'
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
module:
  ../:
    about:
      name: wMathConcepts
      description: >-
        Collection of functions to operate such geometrical concepts as Sphere,
        Box, Plane, Frustum, Ray, Axis and Angle, Euler's Angles, Quaternion and
        other. Why MathConcepts? Three reasons. All functions of the module are
        purely functional. MathConcepts heavily relies on another great concept
        MathVector what makes the module less sensible to data formats of
        operational objects. The module provides functions for conversions from
        one to another conceptual form, for example from Quaternion to Euler's
        Angles or from Euler's Angles to Quaternion or between different
        representations of Euler's Angles. Unlike MatchConcepts many
        alternatives do conversions inconsistently or inaccurately.
        MatchConcepts is densely covered by tests and optimized for accuracy.
        Use MatchConcepts to have uniform experience solving geometrical
        problems and to get a more flexible program.
      enabled: 1
      version: 0.4.26
      interpreters: *ref_0
      keywords: *ref_1
    path:
      module.willfiles:
        criterion:
          predefined: 1
        path:
          - .im.will.yml
          - .ex.will.yml
      module.original.willfiles:
        criterion:
          predefined: 1
        path:
          - .im.will.yml
          - .ex.will.yml
      module.common:
        criterion:
          predefined: 1
        path: ./
      local:
        criterion:
          predefined: 1
      remote:
        criterion:
          predefined: 1
      in:
        criterion:
          predefined: 0
        path: .
      temp:
        path: out
      out:
        criterion:
          predefined: 0
        path: out
      out.debug:
        criterion:
          debug: 1
        path: ./out/debug
      out.release:
        criterion:
          debug: 0
        path: ./out/release
      proto:
        path: ./proto
      repository:
        path: 'git+https:///github.com/Wandalen/wMathConcepts.git'
      bugs:
        path: 'https:///github.com/Wandalen/wMathConcepts/issues'
      exported.dir.proto.export:
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
        path: ./proto
      exported.files.proto.export:
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
        path:
          - proto
          - proto/dwtools
          - proto/dwtools/Tools.s
          - proto/dwtools/abase
          - proto/dwtools/amath
          - proto/dwtools/amath/l7.test
          - proto/dwtools/amath/l7.test/AxisAndAngle.test.s
          - proto/dwtools/amath/l7.test/Box.test.s
          - proto/dwtools/amath/l7.test/Capsule.test.s
          - proto/dwtools/amath/l7.test/Euler.test.s
          - proto/dwtools/amath/l7.test/Experiment.experiment.s
          - proto/dwtools/amath/l7.test/Frustum.test.s
          - proto/dwtools/amath/l7.test/Line.test.s
          - proto/dwtools/amath/l7.test/Plane.test.s
          - proto/dwtools/amath/l7.test/Quat.test.s
          - proto/dwtools/amath/l7.test/Ray.test.s
          - proto/dwtools/amath/l7.test/Segment.test.s
          - proto/dwtools/amath/l7.test/Sphere.test.s
          - proto/dwtools/amath/l7_concept
          - proto/dwtools/amath/l7_concept/AxisAndAngle.s
          - proto/dwtools/amath/l7_concept/Box.s
          - proto/dwtools/amath/l7_concept/Capsule.s
          - proto/dwtools/amath/l7_concept/Euler.s
          - proto/dwtools/amath/l7_concept/Frustum.s
          - proto/dwtools/amath/l7_concept/Line.s
          - proto/dwtools/amath/l7_concept/Plane.s
          - proto/dwtools/amath/l7_concept/Quat.s
          - proto/dwtools/amath/l7_concept/Ray.s
          - proto/dwtools/amath/l7_concept/Segment.s
          - proto/dwtools/amath/l7_concept/Sphere.s
          - proto/dwtools/amath/l8
          - proto/dwtools/amath/l8/Concepts.s
          - proto/dwtools/amid
          - proto/dwtools/atop
    submodule: {}
    reflector:
      reflect.proto.:
        src:
          filePath:
            'path::proto': 'path::out.*=1'
        mandatory: 1
        criterion:
          debug: 0
        inherit:
          - predefined.*
      reflect.proto.debug:
        src:
          filePath:
            'path::proto': 'path::out.*=1'
        mandatory: 1
        criterion:
          debug: 1
        inherit:
          - predefined.*
      reflect.submodules:
        src:
          filePath:
            'submodule::*/exported::*=1/path::exportedDir*=1': 'path::out.*=1'
        mandatory: 1
        criterion:
          debug: 1
        inherit:
          - predefined.*
      exported.proto.export:
        src:
          filePath:
            .: ''
          prefixPath: proto
        mandatory: 1
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
      exported.files.proto.export:
        src:
          filePath:
            'path::exported.files.proto.export': ''
          basePath: .
          prefixPath: 'path::exported.dir.proto.export'
        recursive: 0
        mandatory: 1
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
    step:
      clean.out.:
        opts:
          filePath: 'path::out.debug'
        criterion:
          debug: 0
        inherit:
          - files.delete
      clean.out.debug:
        opts:
          filePath: 'path::out.debug'
        criterion:
          debug: 1
        inherit:
          - files.delete
      reflect.proto.:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 0
        inherit:
          - files.reflect
      reflect.proto.debug:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 0
        inherit:
          - files.reflect
      reflect.proto.raw:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 1
        inherit:
          - files.reflect
      reflect.proto.debug.raw:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 1
        inherit:
          - files.reflect
      reflect.submodules.:
        opts:
          reflector: 'reflector::reflect.submodules*=1'
        criterion:
          debug: 1
          raw: 0
        inherit:
          - files.reflect
      reflect.submodules.raw:
        opts:
          reflector: 'reflector::reflect.submodules*=1'
        criterion:
          debug: 1
          raw: 1
        inherit:
          - files.reflect
      reflect.submodules:
        opts:
          reflector: 'reflector::reflect.submodules*'
        criterion:
          debug: 1
        inherit:
          - files.reflect
      export.proto:
        opts:
          export: 'path::proto'
          tar: 0
        criterion:
          debug: 1
          proto: 1
        inherit:
          - module.export
    build:
      debug.raw:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          default: 1
          debug: 1
          raw: 1
      debug.compiled:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 0
      release.raw:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 1
      release.compiled:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 0
      all:
        steps:
          - 'build::debug.raw'
          - 'build::release.compiled'
      proto.export:
        steps:
          - 'build::debug.raw'
          - 'step::export.proto'
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
    exported:
      proto.export:
        version: 0.4.26
        exportedReflector: 'reflector::exported.proto.export'
        exportedFilesReflector: 'reflector::exported.files.proto.export'
        exportedDirPath: 'path::exported.dir.proto.export'
        exportedFilesPath: 'path::exported.files.proto.export'
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
  wMathConcepts.out: root
